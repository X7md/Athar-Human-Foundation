---
import Layout from '../../../layouts/Layout.astro';

export async function getStaticPaths() {
  const res = await fetch('https://wpadmin.athar.online/graphql', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      query: `
       query GetPostIDs {
        posts(where: { categoryName: "english" }) { # Filter by category here
          nodes {
            id # This is the base64 encoded ID
          }
        }
      }
      `,
    }),
  });

  const { data } = await res.json();
  const posts = data.posts.nodes;

  return posts.map((
    //@ts-expect-error
    post
  ) => {
    const id = post.id; // The base64 encoded ID
    const decodedId = id; // Decode the ID after 'post:'
    const slug = decodedId; // or you can use other logic to generate a user-friendly slug
    return {
      params: { slug: slug }, // Use some user-friendly slug here
      props: { id }, // Pass the base64 ID as a prop
    };
  });
}

const { slug } = Astro.params;
const { id } = Astro.props; // Receive the base64 ID

// Fetch individual post data using the ID
const postRes = await fetch('https://wpadmin.athar.online/graphql', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    query: `
      query GetPostById($id: ID!) { # Use ID! type
        post(id: $id) { # Query by ID
          id
          title
          date
          uri
          author {
            node {
              name
            }
          }
          content
          featuredImage {
            node {
              sourceUrl
            }
          }
        }
      }
    `,
    variables: { id }, // Pass the base64 encoded ID
  }),
});

const { data: postData } = await postRes.json();
const post = postData?.post; // Access the single post
// ... (rest of the component code remains the same, using post.title, post.content, etc.)
---

<Layout dir='ltr' lang='en'>
  {post && ( // Conditional rendering to prevent errors if post is not found
    <article class="max-w-4xl mx-auto px-4 py-8">
      <header class="mb-8">
        <h1 class="text-4xl font-bold font-almasmak text-primary-color mb-4">{post.title}</h1>
        <div class="flex items-center gap-4 text-primary-color-1 text-sm">
          <time class="text-secondary-color">{new Date(post.date).toLocaleDateString('en-SA')}</time> {/* Format the date */}
          <span class="flex items-center gap-2">
            <span>by</span>
            <span class="font-medium">{post.author["node"].name}</span>
          </span>
        </div>
      </header>

      <div class="prose prose-lg max-w-none font-koodak">
        <div class="mb-6 text-primary-color-1 leading-relaxed">
          {/* Your article content */}
          <div is:raw set:html={post.content} /> {/* Use set:html to render HTML content */}
        </div>
      </div>
    </article>
    // <>{JSON.stringify(post)}</>
  )}
</Layout>